---
apiVersion: core.kuberik.io/v1alpha1
kind: Screener
metadata:
  name: ci
spec:
  movie: ci
  class: github.screener.kuberik.io
  type: Push
  config:
    repo: {}
    tokenSecret: github-credentials
---
apiVersion: core.kuberik.io/v1alpha1
kind: Movie
metadata:
  name: ci
spec:
  template:
    spec:
      screenplays:
      - name: main
        provision:
          resources:
          - apiVersion: v1
            kind: PersistentVolumeClaim
            metadata:
              name: &src_pvc src
            spec:
              accessModes: [ "ReadWriteOnce" ]
              resources:
                requests:
                  storage: 1Gi
        credits:
          opening:
          - name: status-pending
            action: &github_status_update_action
              template:
                spec:
                  volumes:
                  - &scripts_volume
                    name: &scripts_volume_name scripts
                    configMap: {name: ci-scripts, defaultMode: 0744}
                  containers:
                  - name: status-update
                    image: cloudposse/github-status-updater
                    envFrom: [secretRef: {name: github-credentials}]
                    volumeMounts:
                    - &scripts_volume_mount
                      name: *scripts_volume_name
                      mountPath: /scripts
                    command: [/scripts/github-status-update.sh]
          closing:
          - name: status-finish
            action: *github_status_update_action
        scenes:
        - name: clone
          frames:
          - name: clone
            action:
              template:
                spec:
                  volumes:
                  - *scripts_volume
                  - &src_volume
                    name: src
                    persistentVolumeClaim:
                      claimName: src
                  containers:
                  - name: clone
                    image: clone
                    command: [/scripts/git-clone.sh]
                    volumeMounts:
                    - *scripts_volume_mount
                    - &src_volume_mount
                      name: *src_pvc
                      mountPath: &src_mount_path "/src"
                    workingDir: *src_mount_path
        - name: build
          frames:
          - name: build
            action:
              template:
                spec:
                  volumes: [*src_volume]
                  containers:
                  - name: build
                    image: build
                    command: [make]
                    volumeMounts: [*src_volume_mount]
                    workingDir: *src_mount_path
        - name: test
          frames:
          - name: test
            action:
              template:
                spec:
                  volumes: [*src_volume]
                  containers:
                  - name: test
                    image: test
                    command: [make, test]
                    volumeMounts: [*src_volume_mount]
                    workingDir: *src_mount_path
        - name: publish
          frames:
          - name: publish
            action:
              template:
                spec:
                  volumes: [*src_volume, *scripts_volume, {name: &kaniko_docker_volume kaniko-docker, emptyDir: {}}]
                  initContainers:
                  - name: kaniko-config
                    image: docker
                    command: [/scripts/docker-login.sh]
                    envFrom: [{secretRef: {name: ci-docker-publish}}]
                    volumeMounts:
                    - *scripts_volume_mount
                    - &kaniko_docker_volume_mount
                      name: *kaniko_docker_volume
                      mountPath: /kaniko/.docker
                  containers:
                  - name: publish
                    image: gcr.io/kaniko-project/executor:latest
                    args:
                    - --context=dir:///src
                    - --destination=$(DOCKER_REGISTRY_SERVER)/$(GITHUB_OWNER)/$(GITHUB_REPO):$(GIT_COMMIT_HASH)
                    envFrom: [{secretRef: {name: ci-docker-publish}}]
                    volumeMounts: [*src_volume_mount, *kaniko_docker_volume_mount]
